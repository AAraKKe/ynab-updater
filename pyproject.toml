[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ynab-updater"
dynamic = ["version"]
description = 'Update YNAB account balances easily.'
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
keywords = ["ynab", "textual", "finance", "budget"]
authors = [{ name = "Juanpe Araque", email = "erjuanpea@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Environment :: Console",
  "Intended Audience :: End Users/Desktop",
  "Topic :: Office/Business :: Financial :: Accounting",
]
dependencies = [
  "textual>=0.58.0",  # Use a recent version
  "typer>=0.12.3",
  "pydantic>=2.7.1",
  "requests>=2.31.0", # For YNAB API calls
  "ynab>=1.3.1",      # Add official YNAB SDK
]

[project.scripts]
ynab-updater = "ynab_updater.cli:app"

[tool.hatch.envs.dev]
dependencies = [
  "textual-dev",
  # Need for vscode to discover tests
  "pytest",
  "pytest-cov",
  "ruff",
]

[tool.hatch.envs.dev.scripts]
console = "textual console"
ynab-updater = "textual run --dev ynab_updater.cli"

[project.urls]
Documentation = "https://github.com/AAraKKe/ynab-updater#readme"
Issues = "https://github.com/AAraKKe/ynab-updater/issues"
Source = "https://github.com/AAraKKe/ynab-updater"

[tool.hatch.version]
path = "src/ynab_updater/__about__.py"


[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ynab_updater tests}"

[tool.coverage.run]
source_pkgs = ["ynab_updater", "tests"]
branch = true
parallel = true
omit = ["src/ynab_updater/__about__.py"]

[tool.coverage.paths]
ynab_updater = ["src/ynab_updater", "*/ynab-updater/src/ynab_updater"]
tests = ["tests", "*/ynab-updater/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
line-length = 120
indent-width = 4
exclude = [
  ".hatch",
  ".git",
  ".pytest_cache",
  ".mypy_cache",
  ".ruff_cache",
  "dist",
  "sim.py",
]
src = ["mitup_bot", "tests"]

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = ["SIM117"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["I001"]

[tool.ruff.lint.isort]
known-first-party = ["ynab_updater", "tests"]
# Eensure alembic is not confused with our local alembic folder
known-third-party = ["alembic"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 120
max-line-length = 120

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
